openapi: 3.0.0
info:
  title: Todo List
  version: 0.0.1
servers:
- url: http://localhost:8080/todolist
paths:
  /todos/{id}:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: get todos response
      summary: Get a todo
      x-accepts: application/json
  /todos:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_todos_put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: creation response
      summary: Create a todo
      x-content-type: application/json
      x-accepts: application/json
  /tasks/{todoId}:
    get:
      parameters:
      - explode: false
        in: path
        name: todoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: get tasks response
      summary: Get a list of tasks
      x-accepts: application/json
  /tasks:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_tasks_put_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: creation response
      summary: Create a new task for a specific todo
      x-content-type: application/json
      x-accepts: application/json
components:
  requestBodies:
    TaskRequest:
      content:
        application/json:
          schema:
            properties:
              todoId:
                type: string
              description:
                type: string
            required:
            - description
            - todoId
            type: object
      description: new task
  schemas:
    Todo:
      example:
        numberOfTasks: 6
        name: name
        id: 0
        creation: creation
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        creation:
          type: string
        numberOfTasks:
          format: int64
          type: integer
      required:
      - id
      - name
      type: object
    Task:
      example:
        description: description
        todoId: 6
        isDone: true
        taskId: 0
        creation: creation
      properties:
        taskId:
          format: int64
          type: integer
        todoId:
          format: int64
          type: integer
        description:
          type: string
        creation:
          type: string
        isDone:
          type: boolean
      required:
      - description
      - todoId
      type: object
    _todos_put_request:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    _tasks_put_request:
      properties:
        todoId:
          format: int64
          type: integer
        description:
          type: string
      required:
      - description
      - todoId
      type: object
